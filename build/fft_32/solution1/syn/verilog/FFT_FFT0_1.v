// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FFT_FFT0_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        FFT_stage_offset,
        pass_check_offset,
        index_shift_offset,
        pass_shift_offset,
        data_IN_M_real_0_0_0_address0,
        data_IN_M_real_0_0_0_ce0,
        data_IN_M_real_0_0_0_q0,
        data_IN_M_real_0_0_0_address1,
        data_IN_M_real_0_0_0_ce1,
        data_IN_M_real_0_0_0_q1,
        data_IN_M_imag_0_0_0_address0,
        data_IN_M_imag_0_0_0_ce0,
        data_IN_M_imag_0_0_0_q0,
        data_IN_M_imag_0_0_0_address1,
        data_IN_M_imag_0_0_0_ce1,
        data_IN_M_imag_0_0_0_q1,
        data_OUT_M_real_0_0_0_address0,
        data_OUT_M_real_0_0_0_ce0,
        data_OUT_M_real_0_0_0_we0,
        data_OUT_M_real_0_0_0_d0,
        data_OUT_M_imag_0_0_0_address0,
        data_OUT_M_imag_0_0_0_ce0,
        data_OUT_M_imag_0_0_0_we0,
        data_OUT_M_imag_0_0_0_d0
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_state2 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] FFT_stage_offset;
input  [3:0] pass_check_offset;
input  [2:0] index_shift_offset;
input  [2:0] pass_shift_offset;
output  [4:0] data_IN_M_real_0_0_0_address0;
output   data_IN_M_real_0_0_0_ce0;
input  [15:0] data_IN_M_real_0_0_0_q0;
output  [4:0] data_IN_M_real_0_0_0_address1;
output   data_IN_M_real_0_0_0_ce1;
input  [15:0] data_IN_M_real_0_0_0_q1;
output  [4:0] data_IN_M_imag_0_0_0_address0;
output   data_IN_M_imag_0_0_0_ce0;
input  [15:0] data_IN_M_imag_0_0_0_q0;
output  [4:0] data_IN_M_imag_0_0_0_address1;
output   data_IN_M_imag_0_0_0_ce1;
input  [15:0] data_IN_M_imag_0_0_0_q1;
output  [4:0] data_OUT_M_real_0_0_0_address0;
output   data_OUT_M_real_0_0_0_ce0;
output   data_OUT_M_real_0_0_0_we0;
output  [15:0] data_OUT_M_real_0_0_0_d0;
output  [4:0] data_OUT_M_imag_0_0_0_address0;
output   data_OUT_M_imag_0_0_0_ce0;
output   data_OUT_M_imag_0_0_0_we0;
output  [15:0] data_OUT_M_imag_0_0_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [3:0] sub_fu_76_p2;
reg   [3:0] sub_reg_105;
wire   [3:0] sub15_cast_fu_83_p2;
reg   [3:0] sub15_cast_reg_110;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_idle;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_ready;
wire   [4:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address0;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce0;
wire   [4:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address1;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce1;
wire   [4:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address0;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce0;
wire   [4:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address1;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce1;
wire   [4:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_address0;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_ce0;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_we0;
wire   [15:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_d0;
wire   [4:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_address0;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_ce0;
wire    grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_we0;
wire   [15:0] grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_d0;
reg    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg;
wire    ap_CS_fsm_state2;
reg   [1:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg = 1'b0;
end

FFT_FFT0_1_Pipeline_FFT_label1 grp_FFT0_1_Pipeline_FFT_label1_fu_52(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start),
    .ap_done(grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done),
    .ap_idle(grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_idle),
    .ap_ready(grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_ready),
    .index_shift_offset_cast(index_shift_offset),
    .pass_shift_offset_cast(pass_shift_offset),
    .FFT_stage_offset_cast(FFT_stage_offset),
    .data_IN_M_real_0_0_0_address0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address0),
    .data_IN_M_real_0_0_0_ce0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce0),
    .data_IN_M_real_0_0_0_q0(data_IN_M_real_0_0_0_q0),
    .data_IN_M_real_0_0_0_address1(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address1),
    .data_IN_M_real_0_0_0_ce1(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce1),
    .data_IN_M_real_0_0_0_q1(data_IN_M_real_0_0_0_q1),
    .data_IN_M_imag_0_0_0_address0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address0),
    .data_IN_M_imag_0_0_0_ce0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce0),
    .data_IN_M_imag_0_0_0_q0(data_IN_M_imag_0_0_0_q0),
    .data_IN_M_imag_0_0_0_address1(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address1),
    .data_IN_M_imag_0_0_0_ce1(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce1),
    .data_IN_M_imag_0_0_0_q1(data_IN_M_imag_0_0_0_q1),
    .data_OUT_M_real_0_0_0_address0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_address0),
    .data_OUT_M_real_0_0_0_ce0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_ce0),
    .data_OUT_M_real_0_0_0_we0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_we0),
    .data_OUT_M_real_0_0_0_d0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_d0),
    .data_OUT_M_imag_0_0_0_address0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_address0),
    .data_OUT_M_imag_0_0_0_ce0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_ce0),
    .data_OUT_M_imag_0_0_0_we0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_we0),
    .data_OUT_M_imag_0_0_0_d0(grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_d0),
    .sub_cast(sub_reg_105),
    .zext_ln26(sub15_cast_reg_110)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg <= 1'b1;
        end else if ((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_ready == 1'b1)) begin
            grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        sub15_cast_reg_110 <= sub15_cast_fu_83_p2;
        sub_reg_105 <= sub_fu_76_p2;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign data_IN_M_imag_0_0_0_address0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address0;

assign data_IN_M_imag_0_0_0_address1 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address1;

assign data_IN_M_imag_0_0_0_ce0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce0;

assign data_IN_M_imag_0_0_0_ce1 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce1;

assign data_IN_M_real_0_0_0_address0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address0;

assign data_IN_M_real_0_0_0_address1 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address1;

assign data_IN_M_real_0_0_0_ce0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce0;

assign data_IN_M_real_0_0_0_ce1 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce1;

assign data_OUT_M_imag_0_0_0_address0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_address0;

assign data_OUT_M_imag_0_0_0_ce0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_ce0;

assign data_OUT_M_imag_0_0_0_d0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_d0;

assign data_OUT_M_imag_0_0_0_we0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_we0;

assign data_OUT_M_real_0_0_0_address0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_address0;

assign data_OUT_M_real_0_0_0_ce0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_ce0;

assign data_OUT_M_real_0_0_0_d0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_d0;

assign data_OUT_M_real_0_0_0_we0 = grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_we0;

assign grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start = grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg;

assign sub15_cast_fu_83_p2 = ($signed(pass_check_offset) + $signed(4'd15));

assign sub_fu_76_p2 = ($signed(FFT_stage_offset) + $signed(4'd15));

endmodule //FFT_FFT0_1
