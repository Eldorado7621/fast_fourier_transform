// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="FFT_FFT,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z010-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.770750,HLS_SYN_LAT=302,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1162,HLS_SYN_LUT=2280,HLS_VERSION=2021_2}" *)

module FFT (
        ap_local_block,
        ap_local_deadlock,
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_IN_TDATA,
        data_IN_TVALID,
        data_IN_TREADY,
        data_OUT_TDATA,
        data_OUT_TVALID,
        data_OUT_TREADY
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_state2 = 18'd2;
parameter    ap_ST_fsm_state3 = 18'd4;
parameter    ap_ST_fsm_state4 = 18'd8;
parameter    ap_ST_fsm_state5 = 18'd16;
parameter    ap_ST_fsm_state6 = 18'd32;
parameter    ap_ST_fsm_state7 = 18'd64;
parameter    ap_ST_fsm_state8 = 18'd128;
parameter    ap_ST_fsm_state9 = 18'd256;
parameter    ap_ST_fsm_state10 = 18'd512;
parameter    ap_ST_fsm_state11 = 18'd1024;
parameter    ap_ST_fsm_state12 = 18'd2048;
parameter    ap_ST_fsm_state13 = 18'd4096;
parameter    ap_ST_fsm_state14 = 18'd8192;
parameter    ap_ST_fsm_state15 = 18'd16384;
parameter    ap_ST_fsm_state16 = 18'd32768;
parameter    ap_ST_fsm_state17 = 18'd65536;
parameter    ap_ST_fsm_state18 = 18'd131072;

output   ap_local_block;
output   ap_local_deadlock;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] data_IN_TDATA;
input   data_IN_TVALID;
output   data_IN_TREADY;
output  [31:0] data_OUT_TDATA;
output   data_OUT_TVALID;
input   data_OUT_TREADY;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [4:0] xin_M_real_V_address0;
reg    xin_M_real_V_ce0;
reg    xin_M_real_V_we0;
wire   [15:0] xin_M_real_V_q0;
reg   [4:0] xin_M_imag_V_address0;
reg    xin_M_imag_V_ce0;
reg    xin_M_imag_V_we0;
wire   [15:0] xin_M_imag_V_q0;
reg   [4:0] data_OUT0_M_real_V_address0;
reg    data_OUT0_M_real_V_ce0;
reg    data_OUT0_M_real_V_we0;
wire   [15:0] data_OUT0_M_real_V_q0;
reg    data_OUT0_M_real_V_ce1;
wire   [15:0] data_OUT0_M_real_V_q1;
reg   [4:0] data_OUT0_M_imag_V_address0;
reg    data_OUT0_M_imag_V_ce0;
reg    data_OUT0_M_imag_V_we0;
wire   [15:0] data_OUT0_M_imag_V_q0;
reg    data_OUT0_M_imag_V_ce1;
wire   [15:0] data_OUT0_M_imag_V_q1;
reg   [3:0] W_M_real_V_address0;
reg    W_M_real_V_ce0;
wire   [9:0] W_M_real_V_q0;
reg   [3:0] W_M_imag_V_address0;
reg    W_M_imag_V_ce0;
wire   [8:0] W_M_imag_V_q0;
reg   [4:0] data_OUT1_M_real_V_address0;
reg    data_OUT1_M_real_V_ce0;
reg    data_OUT1_M_real_V_we0;
wire   [15:0] data_OUT1_M_real_V_q0;
reg    data_OUT1_M_real_V_ce1;
wire   [15:0] data_OUT1_M_real_V_q1;
reg   [4:0] data_OUT1_M_imag_V_address0;
reg    data_OUT1_M_imag_V_ce0;
reg    data_OUT1_M_imag_V_we0;
wire   [15:0] data_OUT1_M_imag_V_q0;
reg    data_OUT1_M_imag_V_ce1;
wire   [15:0] data_OUT1_M_imag_V_q1;
reg   [4:0] data_OUT2_M_real_V_address0;
reg    data_OUT2_M_real_V_ce0;
reg    data_OUT2_M_real_V_we0;
wire   [15:0] data_OUT2_M_real_V_q0;
reg    data_OUT2_M_real_V_ce1;
wire   [15:0] data_OUT2_M_real_V_q1;
reg   [4:0] data_OUT2_M_imag_V_address0;
reg    data_OUT2_M_imag_V_ce0;
reg    data_OUT2_M_imag_V_we0;
wire   [15:0] data_OUT2_M_imag_V_q0;
reg    data_OUT2_M_imag_V_ce1;
wire   [15:0] data_OUT2_M_imag_V_q1;
reg   [4:0] data_OUT3_M_real_V_address0;
reg    data_OUT3_M_real_V_ce0;
reg    data_OUT3_M_real_V_we0;
wire   [15:0] data_OUT3_M_real_V_q0;
reg    data_OUT3_M_real_V_ce1;
wire   [15:0] data_OUT3_M_real_V_q1;
reg   [4:0] data_OUT3_M_imag_V_address0;
reg    data_OUT3_M_imag_V_ce0;
reg    data_OUT3_M_imag_V_we0;
wire   [15:0] data_OUT3_M_imag_V_q0;
reg    data_OUT3_M_imag_V_ce1;
wire   [15:0] data_OUT3_M_imag_V_q1;
reg   [4:0] data_OUT4_M_real_V_address0;
reg    data_OUT4_M_real_V_ce0;
reg    data_OUT4_M_real_V_we0;
wire   [15:0] data_OUT4_M_real_V_q0;
reg    data_OUT4_M_real_V_ce1;
wire   [15:0] data_OUT4_M_real_V_q1;
reg   [4:0] data_OUT4_M_imag_V_address0;
reg    data_OUT4_M_imag_V_ce0;
reg    data_OUT4_M_imag_V_we0;
wire   [15:0] data_OUT4_M_imag_V_q0;
reg    data_OUT4_M_imag_V_ce1;
wire   [15:0] data_OUT4_M_imag_V_q1;
reg   [4:0] xout_M_real_V_address0;
reg    xout_M_real_V_ce0;
reg    xout_M_real_V_we0;
wire   [15:0] xout_M_real_V_q0;
reg    xout_M_real_V_ce1;
reg    xout_M_real_V_we1;
reg   [4:0] xout_M_imag_V_address0;
reg    xout_M_imag_V_ce0;
reg    xout_M_imag_V_we0;
wire   [15:0] xout_M_imag_V_q0;
reg    xout_M_imag_V_ce1;
reg    xout_M_imag_V_we1;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_done;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_idle;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_ready;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_data_IN_TREADY;
wire   [4:0] grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_address0;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_ce0;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_we0;
wire   [15:0] grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_d0;
wire   [4:0] grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_address0;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_ce0;
wire    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_we0;
wire   [15:0] grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_d0;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_done;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_idle;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_ready;
wire   [4:0] grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_real_V_address0;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_real_V_ce0;
wire   [4:0] grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_imag_V_address0;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_imag_V_ce0;
wire   [4:0] grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_address0;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_ce0;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_we0;
wire   [15:0] grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_d0;
wire   [4:0] grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_address0;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_ce0;
wire    grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_we0;
wire   [15:0] grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_d0;
wire    grp_FFT0_1_fu_110_ap_start;
wire    grp_FFT0_1_fu_110_ap_done;
wire    grp_FFT0_1_fu_110_ap_idle;
wire    grp_FFT0_1_fu_110_ap_ready;
reg   [3:0] grp_FFT0_1_fu_110_FFT_stage_offset;
reg   [3:0] grp_FFT0_1_fu_110_pass_check_offset;
reg   [2:0] grp_FFT0_1_fu_110_index_shift_offset;
reg   [2:0] grp_FFT0_1_fu_110_pass_shift_offset;
wire   [4:0] grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address0;
wire    grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce0;
reg   [15:0] grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q0;
wire   [4:0] grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address1;
wire    grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce1;
reg   [15:0] grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q1;
wire   [4:0] grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address0;
wire    grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce0;
reg   [15:0] grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q0;
wire   [4:0] grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address1;
wire    grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce1;
reg   [15:0] grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q1;
wire   [4:0] grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_address0;
wire    grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_ce0;
wire    grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_we0;
wire   [15:0] grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_d0;
wire   [4:0] grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_address0;
wire    grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_ce0;
wire    grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_we0;
wire   [15:0] grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_d0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_ap_start;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_ap_done;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_ap_idle;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_ap_ready;
wire   [3:0] grp_FFT_Pipeline_FFT_label1_fu_158_W_M_real_V_address0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_W_M_real_V_ce0;
wire   [3:0] grp_FFT_Pipeline_FFT_label1_fu_158_W_M_imag_V_address0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_W_M_imag_V_ce0;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_address0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_ce0;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_address1;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_ce1;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_address0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_ce0;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_address1;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_ce1;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_address0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_ce0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_we0;
wire   [15:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_d0;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_address1;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_ce1;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_we1;
wire   [15:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_d1;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_address0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_ce0;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_we0;
wire   [15:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_d0;
wire   [4:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_address1;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_ce1;
wire    grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_we1;
wire   [15:0] grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_d1;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_done;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_idle;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_ready;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TREADY;
wire   [31:0] grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TDATA;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TVALID;
wire   [4:0] grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_real_V_address0;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_real_V_ce0;
wire   [4:0] grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_imag_V_address0;
wire    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_imag_V_ce0;
reg    grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg    grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_FFT0_1_fu_110_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
reg    grp_FFT_Pipeline_FFT_label1_fu_158_ap_start_reg;
reg   [17:0] ap_NS_fsm;
wire    ap_NS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start_reg;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    regslice_both_data_OUT_U_apdone_blk;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
reg    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
reg    ap_ST_fsm_state18_blk;
wire    regslice_both_data_IN_U_apdone_blk;
wire   [31:0] data_IN_TDATA_int_regslice;
wire    data_IN_TVALID_int_regslice;
reg    data_IN_TREADY_int_regslice;
wire    regslice_both_data_IN_U_ack_in;
wire    data_OUT_TREADY_int_regslice;
wire    regslice_both_data_OUT_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start_reg = 1'b0;
#0 grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start_reg = 1'b0;
#0 grp_FFT0_1_fu_110_ap_start_reg = 1'b0;
#0 grp_FFT_Pipeline_FFT_label1_fu_158_ap_start_reg = 1'b0;
#0 grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start_reg = 1'b0;
end

FFT_xin_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
xin_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(xin_M_real_V_address0),
    .ce0(xin_M_real_V_ce0),
    .we0(xin_M_real_V_we0),
    .d0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_d0),
    .q0(xin_M_real_V_q0)
);

FFT_xin_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
xin_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(xin_M_imag_V_address0),
    .ce0(xin_M_imag_V_ce0),
    .we0(xin_M_imag_V_we0),
    .d0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_d0),
    .q0(xin_M_imag_V_q0)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT0_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT0_M_real_V_address0),
    .ce0(data_OUT0_M_real_V_ce0),
    .we0(data_OUT0_M_real_V_we0),
    .d0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_d0),
    .q0(data_OUT0_M_real_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address1),
    .ce1(data_OUT0_M_real_V_ce1),
    .q1(data_OUT0_M_real_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT0_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT0_M_imag_V_address0),
    .ce0(data_OUT0_M_imag_V_ce0),
    .we0(data_OUT0_M_imag_V_we0),
    .d0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_d0),
    .q0(data_OUT0_M_imag_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address1),
    .ce1(data_OUT0_M_imag_V_ce1),
    .q1(data_OUT0_M_imag_V_q1)
);

FFT_FFT0_1_Pipeline_FFT_label1_W_M_real_V_ROM_AUTO_1R #(
    .DataWidth( 10 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
W_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_M_real_V_address0),
    .ce0(W_M_real_V_ce0),
    .q0(W_M_real_V_q0)
);

FFT_FFT0_1_Pipeline_FFT_label1_W_M_imag_V_ROM_AUTO_1R #(
    .DataWidth( 9 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
W_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_M_imag_V_address0),
    .ce0(W_M_imag_V_ce0),
    .q0(W_M_imag_V_q0)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT1_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT1_M_real_V_address0),
    .ce0(data_OUT1_M_real_V_ce0),
    .we0(data_OUT1_M_real_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_d0),
    .q0(data_OUT1_M_real_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address1),
    .ce1(data_OUT1_M_real_V_ce1),
    .q1(data_OUT1_M_real_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT1_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT1_M_imag_V_address0),
    .ce0(data_OUT1_M_imag_V_ce0),
    .we0(data_OUT1_M_imag_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_d0),
    .q0(data_OUT1_M_imag_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address1),
    .ce1(data_OUT1_M_imag_V_ce1),
    .q1(data_OUT1_M_imag_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT2_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT2_M_real_V_address0),
    .ce0(data_OUT2_M_real_V_ce0),
    .we0(data_OUT2_M_real_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_d0),
    .q0(data_OUT2_M_real_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address1),
    .ce1(data_OUT2_M_real_V_ce1),
    .q1(data_OUT2_M_real_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT2_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT2_M_imag_V_address0),
    .ce0(data_OUT2_M_imag_V_ce0),
    .we0(data_OUT2_M_imag_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_d0),
    .q0(data_OUT2_M_imag_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address1),
    .ce1(data_OUT2_M_imag_V_ce1),
    .q1(data_OUT2_M_imag_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT3_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT3_M_real_V_address0),
    .ce0(data_OUT3_M_real_V_ce0),
    .we0(data_OUT3_M_real_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_d0),
    .q0(data_OUT3_M_real_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address1),
    .ce1(data_OUT3_M_real_V_ce1),
    .q1(data_OUT3_M_real_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT3_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT3_M_imag_V_address0),
    .ce0(data_OUT3_M_imag_V_ce0),
    .we0(data_OUT3_M_imag_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_d0),
    .q0(data_OUT3_M_imag_V_q0),
    .address1(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address1),
    .ce1(data_OUT3_M_imag_V_ce1),
    .q1(data_OUT3_M_imag_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT4_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT4_M_real_V_address0),
    .ce0(data_OUT4_M_real_V_ce0),
    .we0(data_OUT4_M_real_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_d0),
    .q0(data_OUT4_M_real_V_q0),
    .address1(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_address1),
    .ce1(data_OUT4_M_real_V_ce1),
    .q1(data_OUT4_M_real_V_q1)
);

FFT_data_OUT0_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
data_OUT4_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(data_OUT4_M_imag_V_address0),
    .ce0(data_OUT4_M_imag_V_ce0),
    .we0(data_OUT4_M_imag_V_we0),
    .d0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_d0),
    .q0(data_OUT4_M_imag_V_q0),
    .address1(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_address1),
    .ce1(data_OUT4_M_imag_V_ce1),
    .q1(data_OUT4_M_imag_V_q1)
);

FFT_xout_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
xout_M_real_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(xout_M_real_V_address0),
    .ce0(xout_M_real_V_ce0),
    .we0(xout_M_real_V_we0),
    .d0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_d0),
    .q0(xout_M_real_V_q0),
    .address1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_address1),
    .ce1(xout_M_real_V_ce1),
    .we1(xout_M_real_V_we1),
    .d1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_d1)
);

FFT_xout_M_real_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
xout_M_imag_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(xout_M_imag_V_address0),
    .ce0(xout_M_imag_V_ce0),
    .we0(xout_M_imag_V_we0),
    .d0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_d0),
    .q0(xout_M_imag_V_q0),
    .address1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_address1),
    .ce1(xout_M_imag_V_ce1),
    .we1(xout_M_imag_V_we1),
    .d1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_d1)
);

FFT_FFT_Pipeline_VITIS_LOOP_58_1 grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start),
    .ap_done(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_done),
    .ap_idle(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_idle),
    .ap_ready(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_ready),
    .data_IN_TVALID(data_IN_TVALID_int_regslice),
    .data_IN_TDATA(data_IN_TDATA_int_regslice),
    .data_IN_TREADY(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_data_IN_TREADY),
    .xin_M_real_V_address0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_address0),
    .xin_M_real_V_ce0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_ce0),
    .xin_M_real_V_we0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_we0),
    .xin_M_real_V_d0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_d0),
    .xin_M_imag_V_address0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_address0),
    .xin_M_imag_V_ce0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_ce0),
    .xin_M_imag_V_we0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_we0),
    .xin_M_imag_V_d0(grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_d0)
);

FFT_FFT_Pipeline_bitreversal_label1 grp_FFT_Pipeline_bitreversal_label1_fu_96(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start),
    .ap_done(grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_done),
    .ap_idle(grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_idle),
    .ap_ready(grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_ready),
    .xin_M_real_V_address0(grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_real_V_address0),
    .xin_M_real_V_ce0(grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_real_V_ce0),
    .xin_M_real_V_q0(xin_M_real_V_q0),
    .xin_M_imag_V_address0(grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_imag_V_address0),
    .xin_M_imag_V_ce0(grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_imag_V_ce0),
    .xin_M_imag_V_q0(xin_M_imag_V_q0),
    .data_OUT0_M_real_V_address0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_address0),
    .data_OUT0_M_real_V_ce0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_ce0),
    .data_OUT0_M_real_V_we0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_we0),
    .data_OUT0_M_real_V_d0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_d0),
    .data_OUT0_M_imag_V_address0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_address0),
    .data_OUT0_M_imag_V_ce0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_ce0),
    .data_OUT0_M_imag_V_we0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_we0),
    .data_OUT0_M_imag_V_d0(grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_d0)
);

FFT_FFT0_1 grp_FFT0_1_fu_110(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT0_1_fu_110_ap_start),
    .ap_done(grp_FFT0_1_fu_110_ap_done),
    .ap_idle(grp_FFT0_1_fu_110_ap_idle),
    .ap_ready(grp_FFT0_1_fu_110_ap_ready),
    .FFT_stage_offset(grp_FFT0_1_fu_110_FFT_stage_offset),
    .pass_check_offset(grp_FFT0_1_fu_110_pass_check_offset),
    .index_shift_offset(grp_FFT0_1_fu_110_index_shift_offset),
    .pass_shift_offset(grp_FFT0_1_fu_110_pass_shift_offset),
    .data_IN_M_real_0_0_0_address0(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address0),
    .data_IN_M_real_0_0_0_ce0(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce0),
    .data_IN_M_real_0_0_0_q0(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q0),
    .data_IN_M_real_0_0_0_address1(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address1),
    .data_IN_M_real_0_0_0_ce1(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce1),
    .data_IN_M_real_0_0_0_q1(grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q1),
    .data_IN_M_imag_0_0_0_address0(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address0),
    .data_IN_M_imag_0_0_0_ce0(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce0),
    .data_IN_M_imag_0_0_0_q0(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q0),
    .data_IN_M_imag_0_0_0_address1(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address1),
    .data_IN_M_imag_0_0_0_ce1(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce1),
    .data_IN_M_imag_0_0_0_q1(grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q1),
    .data_OUT_M_real_0_0_0_address0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_address0),
    .data_OUT_M_real_0_0_0_ce0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_ce0),
    .data_OUT_M_real_0_0_0_we0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_we0),
    .data_OUT_M_real_0_0_0_d0(grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_d0),
    .data_OUT_M_imag_0_0_0_address0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_address0),
    .data_OUT_M_imag_0_0_0_ce0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_ce0),
    .data_OUT_M_imag_0_0_0_we0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_we0),
    .data_OUT_M_imag_0_0_0_d0(grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_d0)
);

FFT_FFT_Pipeline_FFT_label1 grp_FFT_Pipeline_FFT_label1_fu_158(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT_Pipeline_FFT_label1_fu_158_ap_start),
    .ap_done(grp_FFT_Pipeline_FFT_label1_fu_158_ap_done),
    .ap_idle(grp_FFT_Pipeline_FFT_label1_fu_158_ap_idle),
    .ap_ready(grp_FFT_Pipeline_FFT_label1_fu_158_ap_ready),
    .W_M_real_V_address0(grp_FFT_Pipeline_FFT_label1_fu_158_W_M_real_V_address0),
    .W_M_real_V_ce0(grp_FFT_Pipeline_FFT_label1_fu_158_W_M_real_V_ce0),
    .W_M_real_V_q0(W_M_real_V_q0),
    .W_M_imag_V_address0(grp_FFT_Pipeline_FFT_label1_fu_158_W_M_imag_V_address0),
    .W_M_imag_V_ce0(grp_FFT_Pipeline_FFT_label1_fu_158_W_M_imag_V_ce0),
    .W_M_imag_V_q0(W_M_imag_V_q0),
    .data_OUT4_M_real_V_address0(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_address0),
    .data_OUT4_M_real_V_ce0(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_ce0),
    .data_OUT4_M_real_V_q0(data_OUT4_M_real_V_q0),
    .data_OUT4_M_real_V_address1(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_address1),
    .data_OUT4_M_real_V_ce1(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_ce1),
    .data_OUT4_M_real_V_q1(data_OUT4_M_real_V_q1),
    .data_OUT4_M_imag_V_address0(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_address0),
    .data_OUT4_M_imag_V_ce0(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_ce0),
    .data_OUT4_M_imag_V_q0(data_OUT4_M_imag_V_q0),
    .data_OUT4_M_imag_V_address1(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_address1),
    .data_OUT4_M_imag_V_ce1(grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_ce1),
    .data_OUT4_M_imag_V_q1(data_OUT4_M_imag_V_q1),
    .xout_M_real_V_address0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_address0),
    .xout_M_real_V_ce0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_ce0),
    .xout_M_real_V_we0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_we0),
    .xout_M_real_V_d0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_d0),
    .xout_M_real_V_address1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_address1),
    .xout_M_real_V_ce1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_ce1),
    .xout_M_real_V_we1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_we1),
    .xout_M_real_V_d1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_d1),
    .xout_M_imag_V_address0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_address0),
    .xout_M_imag_V_ce0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_ce0),
    .xout_M_imag_V_we0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_we0),
    .xout_M_imag_V_d0(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_d0),
    .xout_M_imag_V_address1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_address1),
    .xout_M_imag_V_ce1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_ce1),
    .xout_M_imag_V_we1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_we1),
    .xout_M_imag_V_d1(grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_d1)
);

FFT_FFT_Pipeline_VITIS_LOOP_68_2 grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start),
    .ap_done(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_done),
    .ap_idle(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_idle),
    .ap_ready(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_ready),
    .data_OUT_TREADY(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TREADY),
    .data_OUT_TDATA(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TDATA),
    .data_OUT_TVALID(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TVALID),
    .xout_M_real_V_address0(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_real_V_address0),
    .xout_M_real_V_ce0(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_real_V_ce0),
    .xout_M_real_V_q0(xout_M_real_V_q0),
    .xout_M_imag_V_address0(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_imag_V_address0),
    .xout_M_imag_V_ce0(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_imag_V_ce0),
    .xout_M_imag_V_q0(xout_M_imag_V_q0)
);

FFT_regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_IN_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(data_IN_TDATA),
    .vld_in(data_IN_TVALID),
    .ack_in(regslice_both_data_IN_U_ack_in),
    .data_out(data_IN_TDATA_int_regslice),
    .vld_out(data_IN_TVALID_int_regslice),
    .ack_out(data_IN_TREADY_int_regslice),
    .apdone_blk(regslice_both_data_IN_U_apdone_blk)
);

FFT_regslice_both #(
    .DataWidth( 32 ))
regslice_both_data_OUT_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TDATA),
    .vld_in(grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TVALID),
    .ack_in(data_OUT_TREADY_int_regslice),
    .data_out(data_OUT_TDATA),
    .vld_out(regslice_both_data_OUT_U_vld_out),
    .ack_out(data_OUT_TREADY),
    .apdone_blk(regslice_both_data_OUT_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT0_1_fu_110_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6))) begin
            grp_FFT0_1_fu_110_ap_start_reg <= 1'b1;
        end else if ((grp_FFT0_1_fu_110_ap_ready == 1'b1)) begin
            grp_FFT0_1_fu_110_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT_Pipeline_FFT_label1_fu_158_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state14) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_FFT_Pipeline_FFT_label1_fu_158_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_Pipeline_FFT_label1_fu_158_ap_ready == 1'b1)) begin
            grp_FFT_Pipeline_FFT_label1_fu_158_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_ready == 1'b1)) begin
            grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state16)) begin
            grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_ready == 1'b1)) begin
            grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start_reg <= 1'b1;
        end else if ((grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_ready == 1'b1)) begin
            grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        W_M_imag_V_address0 = grp_FFT_Pipeline_FFT_label1_fu_158_W_M_imag_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        W_M_imag_V_address0 = 4'd0;
    end else begin
        W_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        W_M_imag_V_ce0 = grp_FFT_Pipeline_FFT_label1_fu_158_W_M_imag_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        W_M_imag_V_ce0 = 1'b0;
    end else begin
        W_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        W_M_real_V_address0 = grp_FFT_Pipeline_FFT_label1_fu_158_W_M_real_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        W_M_real_V_address0 = 4'd0;
    end else begin
        W_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        W_M_real_V_ce0 = grp_FFT_Pipeline_FFT_label1_fu_158_W_M_real_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        W_M_real_V_ce0 = 1'b0;
    end else begin
        W_M_real_V_ce0 = 1'b0;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT0_1_fu_110_ap_done == 1'b0)) begin
        ap_ST_fsm_state11_blk = 1'b1;
    end else begin
        ap_ST_fsm_state11_blk = 1'b0;
    end
end

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT0_1_fu_110_ap_done == 1'b0)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_Pipeline_FFT_label1_fu_158_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

assign ap_ST_fsm_state16_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_done == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

always @ (*) begin
    if ((regslice_both_data_OUT_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state18_blk = 1'b1;
    end else begin
        ap_ST_fsm_state18_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT0_1_fu_110_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_FFT0_1_fu_110_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (regslice_both_data_OUT_U_apdone_blk == 1'b0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (regslice_both_data_OUT_U_apdone_blk == 1'b0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        data_IN_TREADY_int_regslice = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_data_IN_TREADY;
    end else begin
        data_IN_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT0_M_imag_V_address0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_OUT0_M_imag_V_address0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_address0;
    end else begin
        data_OUT0_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT0_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_OUT0_M_imag_V_ce0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_ce0;
    end else begin
        data_OUT0_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT0_M_imag_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce1;
    end else begin
        data_OUT0_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_OUT0_M_imag_V_we0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_imag_V_we0;
    end else begin
        data_OUT0_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT0_M_real_V_address0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_OUT0_M_real_V_address0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_address0;
    end else begin
        data_OUT0_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT0_M_real_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        data_OUT0_M_real_V_ce0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_ce0;
    end else begin
        data_OUT0_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT0_M_real_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce1;
    end else begin
        data_OUT0_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        data_OUT0_M_real_V_we0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_data_OUT0_M_real_V_we0;
    end else begin
        data_OUT0_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT1_M_imag_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT1_M_imag_V_address0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address0;
    end else begin
        data_OUT1_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT1_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT1_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce0;
    end else begin
        data_OUT1_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT1_M_imag_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce1;
    end else begin
        data_OUT1_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT1_M_imag_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_we0;
    end else begin
        data_OUT1_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT1_M_real_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT1_M_real_V_address0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address0;
    end else begin
        data_OUT1_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT1_M_real_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT1_M_real_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce0;
    end else begin
        data_OUT1_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT1_M_real_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce1;
    end else begin
        data_OUT1_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        data_OUT1_M_real_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_we0;
    end else begin
        data_OUT1_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT2_M_imag_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT2_M_imag_V_address0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address0;
    end else begin
        data_OUT2_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT2_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT2_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce0;
    end else begin
        data_OUT2_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT2_M_imag_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce1;
    end else begin
        data_OUT2_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT2_M_imag_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_we0;
    end else begin
        data_OUT2_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT2_M_real_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT2_M_real_V_address0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address0;
    end else begin
        data_OUT2_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT2_M_real_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT2_M_real_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce0;
    end else begin
        data_OUT2_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT2_M_real_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce1;
    end else begin
        data_OUT2_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        data_OUT2_M_real_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_we0;
    end else begin
        data_OUT2_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT3_M_imag_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT3_M_imag_V_address0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_address0;
    end else begin
        data_OUT3_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT3_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT3_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce0;
    end else begin
        data_OUT3_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT3_M_imag_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_ce1;
    end else begin
        data_OUT3_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT3_M_imag_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_we0;
    end else begin
        data_OUT3_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT3_M_real_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT3_M_real_V_address0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_address0;
    end else begin
        data_OUT3_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT3_M_real_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT3_M_real_V_ce0 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce0;
    end else begin
        data_OUT3_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT3_M_real_V_ce1 = grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_ce1;
    end else begin
        data_OUT3_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        data_OUT3_M_real_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_we0;
    end else begin
        data_OUT3_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        data_OUT4_M_imag_V_address0 = grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT4_M_imag_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_address0;
    end else begin
        data_OUT4_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        data_OUT4_M_imag_V_ce0 = grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT4_M_imag_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_ce0;
    end else begin
        data_OUT4_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        data_OUT4_M_imag_V_ce1 = grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_imag_V_ce1;
    end else begin
        data_OUT4_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT4_M_imag_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_imag_0_0_0_we0;
    end else begin
        data_OUT4_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        data_OUT4_M_real_V_address0 = grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT4_M_real_V_address0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_address0;
    end else begin
        data_OUT4_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        data_OUT4_M_real_V_ce0 = grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT4_M_real_V_ce0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_ce0;
    end else begin
        data_OUT4_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        data_OUT4_M_real_V_ce1 = grp_FFT_Pipeline_FFT_label1_fu_158_data_OUT4_M_real_V_ce1;
    end else begin
        data_OUT4_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        data_OUT4_M_real_V_we0 = grp_FFT0_1_fu_110_data_OUT_M_real_0_0_0_we0;
    end else begin
        data_OUT4_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_FFT_stage_offset = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_FFT_stage_offset = 4'd4;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_FFT_stage_offset = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_FFT_stage_offset = 4'd1;
    end else begin
        grp_FFT0_1_fu_110_FFT_stage_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q0 = data_OUT3_M_imag_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q0 = data_OUT2_M_imag_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q0 = data_OUT1_M_imag_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q0 = data_OUT0_M_imag_V_q0;
    end else begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q1 = data_OUT3_M_imag_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q1 = data_OUT2_M_imag_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q1 = data_OUT1_M_imag_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q1 = data_OUT0_M_imag_V_q1;
    end else begin
        grp_FFT0_1_fu_110_data_IN_M_imag_0_0_0_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q0 = data_OUT3_M_real_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q0 = data_OUT2_M_real_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q0 = data_OUT1_M_real_V_q0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q0 = data_OUT0_M_real_V_q0;
    end else begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q1 = data_OUT3_M_real_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q1 = data_OUT2_M_real_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q1 = data_OUT1_M_real_V_q1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q1 = data_OUT0_M_real_V_q1;
    end else begin
        grp_FFT0_1_fu_110_data_IN_M_real_0_0_0_q1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_index_shift_offset = 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_index_shift_offset = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_index_shift_offset = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_index_shift_offset = 3'd4;
    end else begin
        grp_FFT0_1_fu_110_index_shift_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_pass_check_offset = 4'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_pass_check_offset = 4'd4;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_pass_check_offset = 4'd8;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_pass_check_offset = 4'd0;
    end else begin
        grp_FFT0_1_fu_110_pass_check_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_FFT0_1_fu_110_pass_shift_offset = 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_FFT0_1_fu_110_pass_shift_offset = 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_FFT0_1_fu_110_pass_shift_offset = 3'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_FFT0_1_fu_110_pass_shift_offset = 3'd1;
    end else begin
        grp_FFT0_1_fu_110_pass_shift_offset = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        xin_M_imag_V_address0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_imag_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_imag_V_address0 = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_address0;
    end else begin
        xin_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        xin_M_imag_V_ce0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_imag_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_imag_V_ce0 = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_ce0;
    end else begin
        xin_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_imag_V_we0 = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_imag_V_we0;
    end else begin
        xin_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        xin_M_real_V_address0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_real_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_real_V_address0 = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_address0;
    end else begin
        xin_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        xin_M_real_V_ce0 = grp_FFT_Pipeline_bitreversal_label1_fu_96_xin_M_real_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_real_V_ce0 = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_ce0;
    end else begin
        xin_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        xin_M_real_V_we0 = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_xin_M_real_V_we0;
    end else begin
        xin_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        xout_M_imag_V_address0 = grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_imag_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_imag_V_address0 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_address0;
    end else begin
        xout_M_imag_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        xout_M_imag_V_ce0 = grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_imag_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_imag_V_ce0 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_ce0;
    end else begin
        xout_M_imag_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_imag_V_ce1 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_ce1;
    end else begin
        xout_M_imag_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_imag_V_we0 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_we0;
    end else begin
        xout_M_imag_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_imag_V_we1 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_imag_V_we1;
    end else begin
        xout_M_imag_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        xout_M_real_V_address0 = grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_real_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_real_V_address0 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_address0;
    end else begin
        xout_M_real_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        xout_M_real_V_ce0 = grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_xout_M_real_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_real_V_ce0 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_ce0;
    end else begin
        xout_M_real_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_real_V_ce1 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_ce1;
    end else begin
        xout_M_real_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_real_V_we0 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_we0;
    end else begin
        xout_M_real_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        xout_M_real_V_we1 = grp_FFT_Pipeline_FFT_label1_fu_158_xout_M_real_V_we1;
    end else begin
        xout_M_real_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_FFT0_1_fu_110_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_FFT0_1_fu_110_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (grp_FFT0_1_fu_110_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (grp_FFT0_1_fu_110_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (grp_FFT_Pipeline_FFT_label1_fu_158_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (regslice_both_data_OUT_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state14 = ap_NS_fsm[32'd13];


assign ap_local_deadlock = 1'b0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign data_IN_TREADY = regslice_both_data_IN_U_ack_in;

assign data_OUT_TVALID = regslice_both_data_OUT_U_vld_out;

assign grp_FFT0_1_fu_110_ap_start = grp_FFT0_1_fu_110_ap_start_reg;

assign grp_FFT_Pipeline_FFT_label1_fu_158_ap_start = grp_FFT_Pipeline_FFT_label1_fu_158_ap_start_reg;

assign grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start = grp_FFT_Pipeline_VITIS_LOOP_58_1_fu_86_ap_start_reg;

assign grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start = grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_ap_start_reg;

assign grp_FFT_Pipeline_VITIS_LOOP_68_2_fu_174_data_OUT_TREADY = (data_OUT_TREADY_int_regslice & ap_CS_fsm_state17);

assign grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start = grp_FFT_Pipeline_bitreversal_label1_fu_96_ap_start_reg;


reg find_kernel_block = 0;
assign ap_local_block = find_kernel_block;
// synthesis translate_off
`include "FFT_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //FFT

