-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FFT_FFT0_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    FFT_stage_offset : IN STD_LOGIC_VECTOR (3 downto 0);
    pass_check_offset : IN STD_LOGIC_VECTOR (3 downto 0);
    index_shift_offset : IN STD_LOGIC_VECTOR (2 downto 0);
    pass_shift_offset : IN STD_LOGIC_VECTOR (2 downto 0);
    data_IN_M_real_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    data_IN_M_real_0_0_0_ce0 : OUT STD_LOGIC;
    data_IN_M_real_0_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_IN_M_real_0_0_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    data_IN_M_real_0_0_0_ce1 : OUT STD_LOGIC;
    data_IN_M_real_0_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_IN_M_imag_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    data_IN_M_imag_0_0_0_ce0 : OUT STD_LOGIC;
    data_IN_M_imag_0_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_IN_M_imag_0_0_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    data_IN_M_imag_0_0_0_ce1 : OUT STD_LOGIC;
    data_IN_M_imag_0_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
    data_OUT_M_real_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    data_OUT_M_real_0_0_0_ce0 : OUT STD_LOGIC;
    data_OUT_M_real_0_0_0_we0 : OUT STD_LOGIC;
    data_OUT_M_real_0_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_OUT_M_imag_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    data_OUT_M_imag_0_0_0_ce0 : OUT STD_LOGIC;
    data_OUT_M_imag_0_0_0_we0 : OUT STD_LOGIC;
    data_OUT_M_imag_0_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of FFT_FFT0_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_boolean_1 : BOOLEAN := true;

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sub_fu_76_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_reg_105 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub15_cast_fu_83_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub15_cast_reg_110 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_idle : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_ready : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce0 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce1 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce0 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce1 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_ce0 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_we0 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_ce0 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_we0 : STD_LOGIC;
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FFT_FFT0_1_Pipeline_FFT_label1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        index_shift_offset_cast : IN STD_LOGIC_VECTOR (2 downto 0);
        pass_shift_offset_cast : IN STD_LOGIC_VECTOR (2 downto 0);
        FFT_stage_offset_cast : IN STD_LOGIC_VECTOR (3 downto 0);
        data_IN_M_real_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_real_0_0_0_ce0 : OUT STD_LOGIC;
        data_IN_M_real_0_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_IN_M_real_0_0_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_real_0_0_0_ce1 : OUT STD_LOGIC;
        data_IN_M_real_0_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_IN_M_imag_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_imag_0_0_0_ce0 : OUT STD_LOGIC;
        data_IN_M_imag_0_0_0_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_IN_M_imag_0_0_0_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_IN_M_imag_0_0_0_ce1 : OUT STD_LOGIC;
        data_IN_M_imag_0_0_0_q1 : IN STD_LOGIC_VECTOR (15 downto 0);
        data_OUT_M_real_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT_M_real_0_0_0_ce0 : OUT STD_LOGIC;
        data_OUT_M_real_0_0_0_we0 : OUT STD_LOGIC;
        data_OUT_M_real_0_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        data_OUT_M_imag_0_0_0_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        data_OUT_M_imag_0_0_0_ce0 : OUT STD_LOGIC;
        data_OUT_M_imag_0_0_0_we0 : OUT STD_LOGIC;
        data_OUT_M_imag_0_0_0_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        sub_cast : IN STD_LOGIC_VECTOR (3 downto 0);
        zext_ln26 : IN STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    grp_FFT0_1_Pipeline_FFT_label1_fu_52 : component FFT_FFT0_1_Pipeline_FFT_label1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start,
        ap_done => grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done,
        ap_idle => grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_idle,
        ap_ready => grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_ready,
        index_shift_offset_cast => index_shift_offset,
        pass_shift_offset_cast => pass_shift_offset,
        FFT_stage_offset_cast => FFT_stage_offset,
        data_IN_M_real_0_0_0_address0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address0,
        data_IN_M_real_0_0_0_ce0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce0,
        data_IN_M_real_0_0_0_q0 => data_IN_M_real_0_0_0_q0,
        data_IN_M_real_0_0_0_address1 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address1,
        data_IN_M_real_0_0_0_ce1 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce1,
        data_IN_M_real_0_0_0_q1 => data_IN_M_real_0_0_0_q1,
        data_IN_M_imag_0_0_0_address0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address0,
        data_IN_M_imag_0_0_0_ce0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce0,
        data_IN_M_imag_0_0_0_q0 => data_IN_M_imag_0_0_0_q0,
        data_IN_M_imag_0_0_0_address1 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address1,
        data_IN_M_imag_0_0_0_ce1 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce1,
        data_IN_M_imag_0_0_0_q1 => data_IN_M_imag_0_0_0_q1,
        data_OUT_M_real_0_0_0_address0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_address0,
        data_OUT_M_real_0_0_0_ce0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_ce0,
        data_OUT_M_real_0_0_0_we0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_we0,
        data_OUT_M_real_0_0_0_d0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_d0,
        data_OUT_M_imag_0_0_0_address0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_address0,
        data_OUT_M_imag_0_0_0_ce0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_ce0,
        data_OUT_M_imag_0_0_0_we0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_we0,
        data_OUT_M_imag_0_0_0_d0 => grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_d0,
        sub_cast => sub_reg_105,
        zext_ln26 => sub15_cast_reg_110);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_ready = ap_const_logic_1)) then 
                    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                sub15_cast_reg_110 <= sub15_cast_fu_83_p2;
                sub_reg_105 <= sub_fu_76_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done, ap_CS_fsm_state2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done)
    begin
        if ((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done, ap_CS_fsm_state2)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done, ap_CS_fsm_state2)
    begin
        if (((grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    data_IN_M_imag_0_0_0_address0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address0;
    data_IN_M_imag_0_0_0_address1 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_address1;
    data_IN_M_imag_0_0_0_ce0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce0;
    data_IN_M_imag_0_0_0_ce1 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_imag_0_0_0_ce1;
    data_IN_M_real_0_0_0_address0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address0;
    data_IN_M_real_0_0_0_address1 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_address1;
    data_IN_M_real_0_0_0_ce0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce0;
    data_IN_M_real_0_0_0_ce1 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_IN_M_real_0_0_0_ce1;
    data_OUT_M_imag_0_0_0_address0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_address0;
    data_OUT_M_imag_0_0_0_ce0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_ce0;
    data_OUT_M_imag_0_0_0_d0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_d0;
    data_OUT_M_imag_0_0_0_we0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_imag_0_0_0_we0;
    data_OUT_M_real_0_0_0_address0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_address0;
    data_OUT_M_real_0_0_0_ce0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_ce0;
    data_OUT_M_real_0_0_0_d0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_d0;
    data_OUT_M_real_0_0_0_we0 <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_data_OUT_M_real_0_0_0_we0;
    grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start <= grp_FFT0_1_Pipeline_FFT_label1_fu_52_ap_start_reg;
    sub15_cast_fu_83_p2 <= std_logic_vector(unsigned(pass_check_offset) + unsigned(ap_const_lv4_F));
    sub_fu_76_p2 <= std_logic_vector(unsigned(FFT_stage_offset) + unsigned(ap_const_lv4_F));
end behav;
